# Выполнение домашнего задания по теме "обзор сторонних библиотек Python".

# Обзор некоторых возможностей библиотеки numpy.
import numpy as np

a = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]] # Возьмём для примера список списков.
                                                  # Обычно, чтобы представить его двумерной структурой требуются усилия.

print('Список списков:', a)



b = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]) # Numpy легко выводит информацию в двух измерениях.

print('Таблица:\n', b) # Глядя на них уже можно работать с данными как с таблицей.

d = b.reshape(6, 2) # Менять размеры таблицы.

print('Изменение формы таблицы:\n', d)

print('Элемент по координатам:', d[2][1]) # Обращаться к элементам таблицы по двойному индексу (координатам).


# В целом, Numpy экономит время на работе с числеми.

c = np.array([2, 5, 6, 7, 8, 6, 10, 12, 11, 3, 1, 4])

print('Упорядоченный массив:', np.sort(c)) # Имея встроенные механизмы сортировки.

print('Числа по условию:', c[c< 5]) # Имея встроенные механизмы выборки.

# А также имеет встроенный генератор случайных чисел.
print('Случайное число:', np.random.rand())

print('Набор случайных чисел:', np.random.rand(12)) # Который подходит (например) для быстрого создания тестовых данных.



# Numpy - отличный инструмент для работы с двумерными массивами чисел и таблицами.